{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/GITHUB2021/blockchain_ecommerce_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/GITHUB2021/blockchain_ecommerce_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/admin/Desktop/GITHUB2021/blockchain_ecommerce_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/GITHUB2021/blockchain_ecommerce_app/src/components/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport getBlockchain from '../ethereum';\n\nfunction App() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      paymentProcessor = _useState2[0],\n      setPaymentProcessor = _useState2[1]; //1st we define our state which is our pointer to our smart contract and the function to modify the state\n\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dai = _useState4[0],\n      setDai = _useState4[1];\n\n  useEffect(function () {\n    var init =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _ref2, paymentProcessor, dai;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getBlockchain();\n\n              case 2:\n                _ref2 = _context.sent;\n                paymentProcessor = _ref2.paymentProcessor;\n                dai = _ref2.dai;\n                setPaymentProcessor(paymentProcessor);\n                setDai(dai);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function init() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    init();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Hellowrld\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/GITHUB2021/blockchain_ecommerce_app/src/components/App.js"],"names":["React","useEffect","useState","getBlockchain","App","undefined","paymentProcessor","setPaymentProcessor","dai","setDai","init"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,aAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA,kBACmCF,QAAQ,CAACG,SAAD,CAD3C;AAAA;AAAA,MACNC,gBADM;AAAA,MACYC,mBADZ,kBACwD;;;AADxD,mBAESL,QAAQ,CAACG,SAAD,CAFjB;AAAA;AAAA,MAENG,GAFM;AAAA,MAEDC,MAFC;;AAIfR,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAMS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC2BP,aAAa,EADxC;;AAAA;AAAA;AACJG,gBAAAA,gBADI,SACJA,gBADI;AACcE,gBAAAA,GADd,SACcA,GADd;AAEXD,gBAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AACAG,gBAAAA,MAAM,CAACD,GAAD,CAAN;;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAJE,IAAI;AAAA;AAAA;AAAA,OAAV;;AAKAA,IAAAA,IAAI;AACL,GAPQ,EAON,EAPM,CAAT;AASE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAKD;;AAED,eAAeN,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport getBlockchain from '../ethereum';\n\nfunction App() {\n  const [paymentProcessor, setPaymentProcessor] = useState(undefined); //1st we define our state which is our pointer to our smart contract and the function to modify the state\n  const [dai, setDai] = useState(undefined);\n\nuseEffect(()=>{\n  const init = async ()=>{\n    const {paymentProcessor, dai} = await getBlockchain();\n    setPaymentProcessor(paymentProcessor);\n    setDai(dai);\n  }\n  init();\n}, []);\n\n  return (\n    <div>\n      Hellowrld\n    </div>\n  )\n}\n\nexport default App\n\n\n\n"]},"metadata":{},"sourceType":"module"}